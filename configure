#!/bin/sh

CC=g++
LIBS=
LIBS_ENGINE=
CPPFLAGS=-Wall
# on windows set EXE_EXT to '.exe'
EXE_EXT=
ENGINE_EXE=rpg
EDITOR_EXE=rpgedit
SOUND=true

# deze functie haalt dubbele argumenten uit de paramter
# eg. CLEAN a a b c c d  
# echo $TMP
# a b c d
function CLEAN () {
    for arg do
	TMP=`echo "$TMP" | sed -e "s'$arg''g"`" $arg"
    done
}


######################################################################
# parse command line arguments
######################################################################
DEBUG=false
for arg do
    case "$arg" in
	--help) echo "
--with-libdir=PATH	- add this libdir
--with-include=PATH	- add this includedir
--disable-sound		- disable sound support
--debug			- compile with debug code
"
exit 0
;;
	--with-libdir=*) LIBS="$LIBS -L"`echo "$arg" | sed -e 's/^[^=]*=//'` ;;
	--with-include=*) CPPFLAGS="$CPPFLAGS -I"`echo "$arg" | sed -e 's/^[^=]*=//'` ;;
	--disable-sound) SOUND=false ;;
	--debug) echo "Enabling debugging..."; DEBUG=true
    esac
done

if $DEBUG ; then
    CPPFLAGS="$CPPFLAGS -g"
else
    CPPFLAGS="$CPPFLAGS -O2"
fi


######################################################################
# compiler check dmv versie opvragen
# eerst g++, dan c++ en dan cpp
# alle output naar /dev/null
######################################################################
echo -n "Checking for compiler... "
if $CC --version > /dev/null 2> /dev/null ; then
    echo "g++"
else
    CC=c++
    if $CC --version > /dev/null 2> /dev/null ; then
	echo "c++"
    else
	CC=cpp
	if $CC --version > /dev/null 2> /dev/null ; then
	    echo "cpp"
	else
	    echo "*** No c++ compiler"
	    exit 1;
	fi
    fi
fi

######################################################################
# allegro-config check door versie op te vragen
# bestaat deze, dan de LIBS en CPPFLAGS toevoegen
######################################################################
echo -n "Checking for allegro-config... "
if allegro-config --version >/dev/null 2>/dev/null ; then
    LIBS="$LIBS `allegro-config --libs`"
    CPPFLAGS="$CPPFLAGS `allegro-config --cppflags`"
    echo "yes"
else
    echo "no"
    echo "*** No allegro-config found. Please add the right directory to PATH or install allegro"
    echo "using -lalleg instead"
    LIBS="$LIBS -lalleg"
fi

######################################################################
# ff kijken of het ook compiled
######################################################################
echo -n "Checking for allegro... "
cat >conftest.cpp <<EOF
#include <allegro.h>

int main(int argc, char **argv) {
    allegro_init();
    
    return 0;
}
END_OF_MAIN()
// ^ some ALLEGRO macro

EOF
if $CC $CPPFLAGS conftest.cpp $LIBS -o /dev/null > /dev/null 2>/dev/null ; then
    echo "yes"
else
    echo "no"
    echo "*** Allegro not working"
    exit 1
fi

rm -f conftest*

######################################################################
# kijken of we ook kunnen lua scripten
######################################################################
echo -n "Checking for lua... "
if lua -v >/dev/null 2>/dev/null ; then
    # lua gevonden, eens zien of we ook kunnen compilen
    cat >conftest.cpp <<EOF
#include <allegro.h>
extern "C" {
#include <lua.h>
#include <lualib.h>
#include <lauxlib.h>
}

int main(int argc, char **argv) {
    lua_State *L = NULL;
    L = lua_open();

    return 0;
}
END_OF_MAIN()

EOF
    if $CC $CPPFLAGS conftest.cpp $LIBS -llua -llualib -o /dev/null > /dev/null 2>/dev/null ; then
	# gelukt
	LIBS="$LIBS -llua -llualib"
	echo "yes"
    else
	#niet gelukt
	echo "no"
	echo "*** Compiling of lua program failed"
    fi
rm -f conftest*
    
else
    echo "no"
    echo "*** Please install lua. http://www.lua.org"
    exit 1
fi

######################################################################
# sound check
######################################################################
if $SOUND ; then
echo -n "Checking for alogg-config... "
    if alogg-config --version >/dev/null 2>/dev/null ; then
	LIBS_ENGINE="$LIBS_ENGINE `alogg-config --libs`"
	CPPFLAGS="$CPPFLAGS `alogg-config --cflags` -DENABLE_SOUND"
	echo "yes"
    else
	echo "no"
	echo "*** If you want sound install alogg. http://lyrian.free.fr/alogg/"
	$SOUND=false
    fi
fi


######################################################################
######################################################################
######################################################################
# dat was het voor vandaag, nog even een Makefile schrijven.
######################################################################

CLEAN $CPPFLAGS
CPPFLAGS=$TMP

CLEAN $LIBS
LIBS=$TMP

sed "s,@cc@,$CC,;
s'@cppflags@'$CPPFLAGS';
s'@libs@'$LIBS';
s'@libs_engine@'$LIBS_ENGINE';
s'@engine_exe@'$ENGINE_EXE';
s'@editor_exe@'$EDITOR_EXE';" Makefile.in > Makefile

echo ""
echo "Now type 'make' to compile"
